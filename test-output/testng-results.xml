<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="5" passed="5" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-10-03T15:43:41 IST" name="Default suite" finished-at="2021-10-03T15:45:04 IST" duration-ms="83328">
    <groups>
      <group name="Regression Test">
        <method signature="PolicyBazaarTestCases.HealthInsuranceMenuList()[pri:3, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="HealthInsuranceMenuList" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.TravelInsuranceInvalidMobile(java.util.Map)[pri:2, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="TravelInsuranceInvalidMobile" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.displayLowestTravelPlans(java.util.Map)[pri:1, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="displayLowestTravelPlans" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.getErrorForInvalidDetails(java.util.Map)[pri:4, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="getErrorForInvalidDetails" class="com.selenium.testCases.PolicyBazaarTestCases"/>
      </group> <!-- Regression Test -->
      <group name="Smoke Test">
        <method signature="PolicyBazaarTestCases.HealthInsuranceMenuList()[pri:3, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="HealthInsuranceMenuList" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.TravelInsuranceInvalidMobile(java.util.Map)[pri:2, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="TravelInsuranceInvalidMobile" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.displayLowestTravelPlans(java.util.Map)[pri:1, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="displayLowestTravelPlans" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.getErrorForInvalidDetails(java.util.Map)[pri:4, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="getErrorForInvalidDetails" class="com.selenium.testCases.PolicyBazaarTestCases"/>
        <method signature="PolicyBazaarTestCases.openWebSite()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" name="openWebSite" class="com.selenium.testCases.PolicyBazaarTestCases"/>
      </group> <!-- Smoke Test -->
    </groups>
    <test started-at="2021-10-03T15:43:41 IST" name="Default test" finished-at="2021-10-03T15:45:04 IST" duration-ms="83328">
      <class name="com.selenium.testCases.PolicyBazaarTestCases">
        <test-method is-config="true" signature="startReport()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:43:41 IST" name="startReport" finished-at="2021-10-03T15:43:41 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startReport -->
        <test-method signature="openWebSite()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:43:41 IST" name="openWebSite" finished-at="2021-10-03T15:43:46 IST" duration-ms="5023" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- openWebSite -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:43:46 IST" name="getResult" finished-at="2021-10-03T15:43:46 IST" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=openWebSite status=SUCCESS method=PolicyBazaarTestCases.openWebSite()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:43:46 IST" name="flushReports" finished-at="2021-10-03T15:43:47 IST" duration-ms="276" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method signature="displayLowestTravelPlans(java.util.Map)[pri:1, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:43:47 IST" name="displayLowestTravelPlans" data-provider="getThreeLowestTravelQuotes" finished-at="2021-10-03T15:44:20 IST" duration-ms="32992" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Start Date=28/10/2021, End Date=12/11/2021, CountryCode=India, Country=Italy, Comment=Valid credentials  :Country- Italy , Age- 21,22, MobileNumber=8428653545, Age 2=22, Age 1=21}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- displayLowestTravelPlans -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:20 IST" name="flushReports" finished-at="2021-10-03T15:44:20 IST" duration-ms="74" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:20 IST" name="getResult" finished-at="2021-10-03T15:44:20 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=displayLowestTravelPlans status=SUCCESS method=PolicyBazaarTestCases.displayLowestTravelPlans(java.util.Map)[pri:1, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="TravelInsuranceInvalidMobile(java.util.Map)[pri:2, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:20 IST" name="TravelInsuranceInvalidMobile" data-provider="getAgeError" finished-at="2021-10-03T15:44:38 IST" duration-ms="17518" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Start Date=17/10/2021, End Date=10/11/2021, CountryCode=India, Country=Italy, MobileNumber=9.87654E+11, Age 2=22, Age 1=21}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TravelInsuranceInvalidMobile -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:38 IST" name="flushReports" finished-at="2021-10-03T15:44:38 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:38 IST" name="getResult" finished-at="2021-10-03T15:44:38 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TravelInsuranceInvalidMobile status=SUCCESS method=PolicyBazaarTestCases.TravelInsuranceInvalidMobile(java.util.Map)[pri:2, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="HealthInsuranceMenuList()[pri:3, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:38 IST" name="HealthInsuranceMenuList" finished-at="2021-10-03T15:44:42 IST" duration-ms="4187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- HealthInsuranceMenuList -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:42 IST" name="getResult" finished-at="2021-10-03T15:44:42 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=HealthInsuranceMenuList status=SUCCESS method=PolicyBazaarTestCases.HealthInsuranceMenuList()[pri:3, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:42 IST" name="flushReports" finished-at="2021-10-03T15:44:42 IST" duration-ms="63" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method signature="getErrorForInvalidDetails(java.util.Map)[pri:4, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:44:42 IST" name="getErrorForInvalidDetails" data-provider="getErrorDetailsTestData" finished-at="2021-10-03T15:45:04 IST" duration-ms="22173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Year=2020, Car Name=TATA, RTO & City Name=DL07, MODEL=TATA, ZEST, Owner Phone=8428653545, Owner Email=sharma.com, Model Variant=XM REVOTRON 90 PS PETROL (1193 cc), Owner Name=Rishav, Fuel Variant=Petrol}]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getErrorForInvalidDetails -->
        <test-method is-config="true" signature="flushReports()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:45:04 IST" name="flushReports" finished-at="2021-10-03T15:45:04 IST" duration-ms="26" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- flushReports -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:45:04 IST" name="getResult" finished-at="2021-10-03T15:45:04 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=getErrorForInvalidDetails status=SUCCESS method=PolicyBazaarTestCases.getErrorForInvalidDetails(java.util.Map)[pri:4, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:com.selenium.testCases.PolicyBazaarTestCases@2f54a33d]" started-at="2021-10-03T15:45:04 IST" name="endReport" finished-at="2021-10-03T15:45:04 IST" duration-ms="22" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- com.selenium.testCases.PolicyBazaarTestCases -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
